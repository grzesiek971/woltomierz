
/*
 * main.c
 *
 *  Created on: 27 sty 2023
 *      Author: adminW
 */

#include <avr/io.h>
#include <util/delay.h>
#include "usart.h"
#include "ads1115.h"
#include <avr/interrupt.h>
#include "nokia5110.h"
#include <SoftwareSerial.h>

void setup() {

  USART_init(); // inicjalizacja modułu USART
  ADS_init(); // inicjalizacja zewnętrznego przetwornika A/C
  NOKIA_init(); // inicjalizacja wyświetlacza Nokia5110

  sei();  // włączenie przerwań 
  
  /* Rozpoczęcie pierwszej konwersji przetwornika A/C */
  if( (ADS_RANGE_PIN & RANGE_200_MV) == 0 ) ADS_startConversion( 1 );
  else if( (ADS_RANGE_PIN & RANGE_2_V) == 0 ) ADS_startConversion( 2 );
  else if( (ADS_RANGE_PIN & RANGE_20_V) == 0 ) ADS_startConversion( 3 );
}

void loop() {

  /* Deklaracja zmiennych lokalnych automatycznych i statycznych */
  int16_t adcTmp;
  uint8_t bluConnected;
  uint64_t voltage;
  uint32_t voltageFRA;
  uint16_t voltageDEC;
  
  nokia.clearDisplay(); // czyszczenie bufora wyświetlacza

  /* Odczytywanie obecnego zakresu pomiaru */
  if( (ADS_RANGE_PIN & RANGE_200_MV) == 0 ) range = 1;
  else if( (ADS_RANGE_PIN & RANGE_2_V) == 0 ) range = 2;
  else if( (ADS_RANGE_PIN & RANGE_20_V) == 0 ) range = 3;

  /* Sprawdzanie czy moduł Bluetooth jest połączony (bluConnected = 0 -> nie jest*/
  bluConnected = USART_STATE_PIN & USART_STATE;

  if( bluConnected ) USART_displayRange( range );

  NOKIA_displayRange( range );
  NOKIA_bluetooth( bluConnected );


  switch( range )
  {
    case 1:
      voltage = (uint64_t)filterAverage * LSB_R1;
      voltage = ADS_voltageRoundUp( voltage, range );
      	#if RESOLUTION == 35
      	  voltageDEC = voltage / 10;
      	  voltageFRA = voltage % 10;
        #elif RESOLUTION == 45
          voltageDEC = voltage / 100;
          voltageFRA = voltage % 100;
        #else 
          voltageDEC = voltage / 1000;
          voltageFRA = voltage % 1000;
        #endif
      break;
    case 2:
      voltage = (uint64_t)filterAverage * LSB_R2;
      voltage = ADS_voltageRoundUp( voltage, range );
        #if RESOLUTION == 35
          voltageDEC = voltage / 1000;
          voltageFRA = voltage % 1000;
        #elif RESOLUTION == 45
          voltageDEC = voltage / 10000;
          voltageFRA = voltage % 10000;
        #else
          voltageDEC = voltage / 100000;
          voltageFRA = voltage % 100000;
        #endif
      break;
    case 3:
      voltage = (uint64_t)filterAverage * LSB_R2;
      voltage = ADS_voltageRoundUp( voltage, range );
      if( sign == 0 ) voltage /= 10;
        #if RESOLUTION == 35
          voltageDEC = voltage / 100;
          voltageFRA = voltage % 100;
        #elif RESOLUTION == 45
          voltageDEC = voltage / 1000;
          voltageFRA = voltage % 1000;
        #else
          voltageDEC = voltage / 10000;
          voltageFRA = voltage % 10000;
        #endif
      break;
  }
  
  NOKIA_displayVoltage( voltageDEC, voltageFRA, range, sign );
  nokia.display();
  if( bluConnected ) USART_displayVoltage( voltageDEC, voltageFRA, range, sign );
  
  _delay_ms( 500 );
  
}

